"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Name: getAllServerData
 * Created by chris on 4/30/2017.
 * Description:
 */
var parseBanList_1 = require("../parsers/parseBanList");
var parseStatus_1 = require("../parsers/parseStatus");
var parseSysInfoPQM_1 = require("../parsers/parseSysInfoPQM");
var parseSysInfoStats_1 = require("../parsers/parseSysInfoStats");
var parseWhitelist_1 = require("../parsers/parseWhitelist");
var sendRCONCommandToServer_1 = require("../sendRCONCommandToServer");
var node_misrcon_1 = require("../node-misrcon");
function getAllServerData(options) {
    return __awaiter(this, void 0, void 0, function () {
        var serverStatusString, status_1, banStatusString, banlist, whitelistStatusString, whitelist, statsString, stats, pqmString, pqm, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 6, , 7]);
                    return [4 /*yield*/, sendRCONCommandToServer_1.default(__assign(__assign({}, options), { command: 'status' }))];
                case 1:
                    serverStatusString = _a.sent();
                    status_1 = parseStatus_1.default(serverStatusString);
                    return [4 /*yield*/, sendRCONCommandToServer_1.default(__assign(__assign({}, options), { command: 'mis_ban_status' }))];
                case 2:
                    banStatusString = _a.sent();
                    banlist = parseBanList_1.default(banStatusString);
                    return [4 /*yield*/, sendRCONCommandToServer_1.default(__assign(__assign({}, options), { command: 'mis_whitelist_status' }))];
                case 3:
                    whitelistStatusString = _a.sent();
                    whitelist = parseWhitelist_1.default(whitelistStatusString);
                    return [4 /*yield*/, sendRCONCommandToServer_1.default(__assign(__assign({}, options), { command: 'sysinfo stats' }))];
                case 4:
                    statsString = _a.sent();
                    stats = parseSysInfoStats_1.default(statsString);
                    return [4 /*yield*/, sendRCONCommandToServer_1.default(__assign(__assign({}, options), { command: 'sysinfo pqm' }))];
                case 5:
                    pqmString = _a.sent();
                    pqm = parseSysInfoPQM_1.default(pqmString);
                    return [2 /*return*/, __assign(__assign({}, node_misrcon_1.defaultAllData), { status: status_1, banlist: banlist, whitelist: whitelist, stats: stats, pqm: pqm })];
                case 6:
                    e_1 = _a.sent();
                    throw e_1;
                case 7: return [2 /*return*/];
            }
        });
    });
}
exports.default = getAllServerData;
//# sourceMappingURL=index.js.map